name: Update Python and Terraform Versions

on:
  schedule:
    - cron: '0 0 * * 0' # Runs at 00:00 every Sunday

jobs:
  update-versions:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pyenv
        uses: "gabrielfalcao/pyenv-action@v18"

      - name: Fetch the existing Python version
        run: echo "EXISTING_PYTHON_VERSION=$(cat .python-version)" >> $GITHUB_ENV

      - name: Fetch the existing Terraform version
        run: echo "EXISTING_TERRAFORM_VERSION=$(cat .terraform-version)" >> $GITHUB_ENV

      - name: Fetch the latest Python version
        run: echo "NEW_PYTHON_VERSION=$(pyenv latest 3)" >> $GITHUB_ENV

      - name: Fetch the latest Terraform version
        run: echo "NEW_TERRAFORM_VERSION=$(curl -s https://releases.hashicorp.com/terraform/ | grep -o 'terraform_[0-9].[0-9].[0-9]<' | sed 's/.$//' | cut -c11- | sort -V | tail -n 1)" >> $GITHUB_ENV

      - name: Update .python-version
        if: env.EXISTING_PYTHON_VERSION != env.NEW_PYTHON_VERSION
        run: echo "${{ env.NEW_PYTHON_VERSION }}" > .python-version

      - name: Update .terraform-version
        if: env.EXISTING_TERRAFORM_VERSION != env.NEW_TERRAFORM_VERSION
        run: echo "${{ env.NEW_TERRAFORM_VERSION }}" > .terraform-version

      - name: Create pull request for Terraform
        if: env.EXISTING_TERRAFORM_VERSION != env.NEW_TERRAFORM_VERSION
        run: gh pr create -B main -H bot/terraform-update/${GITHUB_SHA} --title 'Bot - Update project Terraform version' --body 'Created by Github action. Update Terraform project versions'
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Automatically merge PRs that pass
      #   run: gh pr review --auto --merge "$PR_URL"
      #   env:
      #     PR_URL: ${{github.event.pull_request.html_url}}
      #     GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
